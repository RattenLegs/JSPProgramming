<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Buffer</title>
</head>
<body>
'한꺼번에, 큰 단위'<br>

JSP 페이지는 응답 결과를 곧바로 웹 브라우저에 전송하지 않는다. 대신 출력 버퍼(buffer)라고 불리는 곳에 임시로 응답 결과를 저장했다가 한 번에 웹 브라우저에 전송한다. <br>

버퍼를 사용했을 때 얻는 장점<br>
1. 데이터 전송 성능 향상<br>
2. JSP 실행 도중 버퍼를 비우고 새로운 내용 전송 가능<br>
3. 버퍼가 다 차기 전까지 헤더 변경 가능<br>
<br>
1. 버퍼를 사용하면 성능이 향상되는데, 그 이유는 작은 단위로 데이터를 전송하는 것이 아니라 한번에 큰 단위로 데이터를 전송하는 것이 가능하기 때문이다. <br>
네트워크를 비롯한 모든 데이터 교환에서는 작은 단위를 여러 차례 보내는 것보다, 큰 단위로 한 번에 묶어서 보내는 것이 더 높은 성능을 발휘하게 된다.<br>
<br>
2. 버퍼를 사용함으로써  jsp:forward 기능과 에러 페이지 처리 기능이 가능하다는 점이다. <br>
JSP 페이지가 생성한 결과를 일단 버퍼에 저장하기 때문에, 버퍼에 보관된 데이터가 일정 크기가 될 때까지 웹 브라우저에 전송되는 데이터는 없다. <br>
따라서, JSP 페이지가 생성한 내용이 있다 하더라도 버퍼에 저장된 데이너가 웹 브라우저로 전송되기 전까지는 버퍼에 보관된 데이터를 지우고 새로운 내용을 전송할 수 있다.<br>
예를 들어, JSP 실행 과정에서 에러가 발생하면 지금까지 생성한 내용을 버퍼에서 지우고 에러 화면을 출력할 수 있다. <br>
<br>
3. 버퍼가 다 차기 전에는 헤더 정보를 변경할 수 있다. <br>
HTTP 프로토콜의 구조상 응답 상태 코드와 함께 헤더 정보를 가장 먼저 웹 브라우저에 전송해야 한다.<br>
이런 이유로 WAS는 처음 버퍼의 내용을 웹 브라우저로 전송하기 전에 헤더 정보를 전송한다. <br>
따라서 첫 번째로 버퍼의 내용을 웹 브라우저에 전송하기 전까지는 헤더 정보를 얼마든지 변경할 수 있다. <br>
하지만, 일단 버퍼 내용이 웹 브라우저에 전송되면 그 이후로는 헤더 정보를 변경해도 적용되지 않게 된다.<br>

<br>
<br>

설정법 <br>
page 디렉티브에서 킬로바이트 단위로 지정, 사용하고 싶지 않으면 page buffer ="none" 하면 됨 <br>
버퍼를 사용하지 않으면 forward 기능을 사용할 수 없고, 출력한 내용을 취소할 수 없다(곧바로 전송되기 때문)<br>
그래서 none하는 경우는 거의 없다<br>
<br>
<br>

flush<br>
버퍼가 다 찼을 때, 버퍼에 쌓인 데이터를 실제로 전송되어야 할 곳(또는 저장되어야 할 곳)에 전송(저장)하고 버퍼를 비우는 것을 플러시라고 한다. <br>
간단하게 클라이언트에 전송 후 버퍼 비우기라 생각하면 된다.<br>
즉, page 디렉티브에서 autoFlush="true"를 지정하면 버퍼가 다 찬 경우 버퍼를 플러시하고 계속해서 작업을 진행하고, false를 지정하면 버퍼가 다 차면 익셉션을 발생시키고 작업을 중지한다. <br>

</body>
</html>